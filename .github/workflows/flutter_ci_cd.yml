name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'

    - name: Ensure assets directory exists
      run: mkdir -p assets

    - name: Create credentials.json
      run: echo "${{ secrets.CREDENTIALS_JSON }}" > assets/credentials.json

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Archive APK
      run: mv build/app/outputs/flutter-apk/app-release.apk app-release.apk

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'release-${{ github.run_number }}'
        release_name: 'Release ${{ github.run_number }}'
        body: |
          This release includes the latest APK for the application.
        draft: false
        prerelease: false
       

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Create Release
      id: createRelease
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ steps.createReleaseTag.outputs.string }}
        release_name: ${{ github.sha }}
        body: Auto-generated prerelease build
        prerelease: true

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: FrEee.WinForms-${{ steps.createReleaseTag.outputs.string }}
        path: FrEee.WinForms-${{ steps.createReleaseTag.outputs.string }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: "${{ steps.createRelease.outputs.upload_url }}"
        asset_path: FrEee.WinForms-${{ steps.createReleaseTag.outputs.string }}
        asset_name: FrEee.WinForms-${{ steps.createReleaseTag.outputs.string }}
        asset_content_type: application/zip
